package practice;
import java.util.Stack;
import java .util.ArrayList;
import java.util.Collections;
class practiceJava {
	public static void main(String[] args) {
		ArrayList <Integer>nsl=new ArrayList<>();
		ArrayList <Integer>nsr=new ArrayList<>();
		// TODO Auto-generated method stub
		
	int arr[]= {6,2,5,4,5,1,6};
	nsl=nsl(arr);
	System.out.println(nsl);
	nsr=nsr(arr);
	System.out.println(nsr);
	  int maxArea = 0;
      for (int i = 0; i < arr.length; i++) {
          int width = nsr.get(i) - nsl.get(i) - 1; // width formula
          int area = arr[i] * width;
          maxArea = Math.max(maxArea, area);
      }
      System.out.println("Maximum Area = " + maxArea);
	
	

	
	}

	private static ArrayList <Integer> nsl(int[] arr) {
		// TODO Auto-generated method stub
		// TODO Auto-generated method stub
		
		Stack<int []> s = new Stack<>();
		ArrayList <Integer>ar=new ArrayList<>();
		
		for(int i=0;i<arr.length;i++) {
			if(s.size()==0) {
				ar.add(-1);// pseudo index to left
				
			}
			else if(s.size()>0&& s.peek()[0]<arr[i]) {
				ar.add(s.peek()[1]);
			}
			else if(s.size()>0&& s.peek()[0]>=arr[i]){
				while(s.size()>0&&s.peek()[0]	>=arr[i]) {
					s.pop();
					
					}
				if(s.size()==0) {
					ar.add(-1);// pseudo index to left
					
				}
				else {
					ar.add(s.peek()[1]);
				}
				}
			s.push(new int[]{arr[i], i});
		}

//		System.out.println(ar);
		return ar;
		
	}

	private static ArrayList <Integer> nsr(int[] arr) {
		// TODO Auto-generated method stub
		Stack<int []> s = new Stack<>();
		ArrayList <Integer>ar=new ArrayList<>();
		int n=arr.length;
		
		for(int i=arr.length-1;i>=0;i--) {
			if(s.size()==0) {
				ar.add(n);// pseudo index to right
				
			}
			else if(s.size()>0&& s.peek()[0]<arr[i]) {
				ar.add(s.peek()[1]);
			}
			else if(s.size()>0&& s.peek()[0]>=arr[i]){
				while(s.size()>0&&s.peek()[0]	>=arr[i]) {
					s.pop();
					
					}
				if(s.size()==0) {
					ar.add(n); // pseudo index to right
					
				}
				else {
					ar.add(s.peek()[1]);
				}
				}
			s.push(new int [] {arr[i],i});
		}
		Collections.reverse(ar);

//		System.out.println(ar);
		return ar;
		
	}

}
